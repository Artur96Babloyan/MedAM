{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\VDA\\\\project\\\\src\\\\components\\\\BuyModal\\\\Revieu.jsx\";\nimport React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Grid from '@material-ui/core/Grid';\nimport hygiene from '../Hygiene';\nconst addresses = ['Reactville', 'Any', '99999', 'ARM'];\nconst payments = [{\n  name: 'Expiry date'\n}];\nconst useStyles = makeStyles(theme => ({\n  listItem: {\n    padding: theme.spacing(1, 0)\n  },\n  total: {\n    fontWeight: 700\n  },\n  title: {\n    marginTop: theme.spacing(2)\n  }\n}));\nexport default function Review(props) {\n  const classes = useStyles();\n  console.log(props.value, props);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Order summary\"), /*#__PURE__*/React.createElement(List, {\n    disablePadding: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, hygiene.map(product => {\n    if (product.id === props.data) {\n      return /*#__PURE__*/React.createElement(ListItem, {\n        className: classes.listItem,\n        key: product.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"body2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: product.img,\n        style: {\n          maxWidth: '100px',\n          maxHeight: '100px'\n        },\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(ListItemText, {\n        primary: product.name,\n        secondary: product.desc,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"body2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }\n      }, product.price));\n    }\n  }), /*#__PURE__*/React.createElement(ListItem, {\n    className: classes.listItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    className: classes.total,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, 9000 + 'AMD'))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"Shipping\"), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, addresses.join(', '))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"column\",\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"Payment details\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, payments.map(payment => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: payment.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  }, payment.name))))))));\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/VDA/project/src/components/BuyModal/Revieu.jsx"],"names":["React","useContext","makeStyles","Typography","List","ListItem","ListItemText","Grid","hygiene","addresses","payments","name","useStyles","theme","listItem","padding","spacing","total","fontWeight","title","marginTop","Review","props","classes","console","log","value","map","product","id","data","img","maxWidth","maxHeight","desc","price","join","payment"],"mappings":"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","sourcesContent":["import React,{useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport hygiene from '../Hygiene'\r\n\r\n\r\nconst addresses = ['Reactville', 'Any', '99999', 'ARM'];\r\nconst payments = [\r\n  { name: 'Expiry date' },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  listItem: {\r\n    padding: theme.spacing(1, 0),\r\n  },\r\n  total: {\r\n    fontWeight: 700,\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function Review(props) {\r\n \r\n  const classes = useStyles();\r\nconsole.log(props.value,props)\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Order summary\r\n      </Typography>\r\n      <List disablePadding>\r\n        {hygiene.map((product) => {\r\n          if (product.id === props.data) {\r\n            return(\r\n            <ListItem className={classes.listItem} key={product.name}>\r\n              <Typography variant=\"body2\">\r\n                <img src={product.img} style={{ maxWidth: '100px', maxHeight: '100px' }} alt=\"\" />\r\n              </Typography>\r\n              <ListItemText primary={product.name} secondary={product.desc} />\r\n              <Typography variant=\"body2\">{product.price}</Typography>\r\n            </ListItem>\r\n            )\r\n          }\r\n            \r\n        })}\r\n        <ListItem className={classes.listItem}>\r\n          <ListItemText primary=\"Total\" />\r\n          <Typography variant=\"subtitle1\" className={classes.total}>\r\n            {9000 +'AMD'}\r\n          </Typography>\r\n        </ListItem>\r\n      </List>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\r\n            Shipping\r\n          </Typography>\r\n          <Typography gutterBottom>{addresses.join(', ')}</Typography>\r\n        </Grid>\r\n        <Grid item container direction=\"column\" xs={12} sm={6}>\r\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\r\n            Payment details\r\n          </Typography>\r\n          <Grid container>\r\n            {payments.map((payment) => (\r\n              <React.Fragment key={payment.name}>\r\n                <Grid item xs={6}>\r\n                  <Typography gutterBottom>{payment.name}</Typography>\r\n                  \r\n                </Grid>\r\n\r\n              </React.Fragment>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}